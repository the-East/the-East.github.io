(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{499:function(e,t,r){"use strict";r.r(t);var a=r(6),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"object-构造函数的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-构造函数的方法"}},[e._v("#")]),e._v(" Object 构造函数的方法")]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"object-assign-通过复制一个或多个对象来创建一个新的对象。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-通过复制一个或多个对象来创建一个新的对象。"}},[e._v("#")]),e._v(" Object.assign()\n通过复制一个或多个对象来创建一个新的对象。")]),e._v(" "),r("h2",{attrs:{id:"object-create-使用指定的原型对象和属性创建一个新对象。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-create-使用指定的原型对象和属性创建一个新对象。"}},[e._v("#")]),e._v(" Object.create()\n使用指定的原型对象和属性创建一个新对象。")]),e._v(" "),r("h2",{attrs:{id:"object-defineproperty-给对象添加一个属性并指定该属性的配置。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperty-给对象添加一个属性并指定该属性的配置。"}},[e._v("#")]),e._v(" Object.defineProperty()\n给对象添加一个属性并指定该属性的配置。")]),e._v(" "),r("h2",{attrs:{id:"object-defineproperties-给对象添加多个属性并分别指定它们的配置。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-defineproperties-给对象添加多个属性并分别指定它们的配置。"}},[e._v("#")]),e._v(" Object.defineProperties()\n给对象添加多个属性并分别指定它们的配置。")]),e._v(" "),r("h2",{attrs:{id:"object-entries-返回给定对象自身可枚举属性的-key-value-数组。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-entries-返回给定对象自身可枚举属性的-key-value-数组。"}},[e._v("#")]),e._v(" Object.entries()\n返回给定对象自身可枚举属性的 [key, value] 数组。")]),e._v(" "),r("h2",{attrs:{id:"object-freeze-冻结对象-其他代码不能删除或更改任何属性。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-freeze-冻结对象-其他代码不能删除或更改任何属性。"}},[e._v("#")]),e._v(" Object.freeze()\n冻结对象：其他代码不能删除或更改任何属性。")]),e._v(" "),r("h2",{attrs:{id:"object-getownpropertydescriptor-返回对象指定的属性配置。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertydescriptor-返回对象指定的属性配置。"}},[e._v("#")]),e._v(" Object.getOwnPropertyDescriptor()\n返回对象指定的属性配置。")]),e._v(" "),r("h2",{attrs:{id:"object-getownpropertynames-返回一个数组-它包含了指定对象所有的可枚举或不可枚举的属性名。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertynames-返回一个数组-它包含了指定对象所有的可枚举或不可枚举的属性名。"}},[e._v("#")]),e._v(" Object.getOwnPropertyNames()\n返回一个数组，它包含了指定对象所有的可枚举或不可枚举的属性名。")]),e._v(" "),r("h2",{attrs:{id:"object-getownpropertysymbols-返回一个数组-它包含了指定对象自身所有的符号属性。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertysymbols-返回一个数组-它包含了指定对象自身所有的符号属性。"}},[e._v("#")]),e._v(" Object.getOwnPropertySymbols()\n返回一个数组，它包含了指定对象自身所有的符号属性。")]),e._v(" "),r("h2",{attrs:{id:"object-getprototypeof-返回指定对象的原型对象。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-getprototypeof-返回指定对象的原型对象。"}},[e._v("#")]),e._v(" Object.getPrototypeOf()\n返回指定对象的原型对象。")]),e._v(" "),r("p",[e._v("Object.is()\n比较两个值是否相同。所有 NaN 值都相等（这与==和===不同）。\nObject.isExtensible()\n判断对象是否可扩展。\nObject.isFrozen()\n判断对象是否已经冻结。\nObject.isSealed()\n判断对象是否已经密封。\nObject.keys()\n返回一个包含所有给定对象自身可枚举属性名称的数组。\nObject.preventExtensions()\n防止对象的任何扩展。\nObject.seal()\n防止其他代码删除对象的属性。\nObject.setPrototypeOf()\n设置对象的原型（即内部 [[Prototype]] 属性）。\nObject.values()\n返回给定对象自身可枚举值的数组。")])])}),[],!1,null,null,null);t.default=s.exports}}]);